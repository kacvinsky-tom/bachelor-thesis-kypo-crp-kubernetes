{{- with .Values.sandbox }}
apiVersion: v1
kind: ConfigMap
metadata:
  name: {{ .name }}-configmap
data:
  config.yml: |
    # Name of the microservice.
    #microservice_name: kypo-sandbox-service

    # A prefix of the stack in the cloud with maximum 8 characters.
    stack_name_prefix: {{ $.Values.kypoCrpInstanceName }}

    # A boolean that turns on/off debug mode.
    # SECURITY WARNING: don't run with debug turned on in production!
    debug: False

    # A list of strings representing the host/domain names that this Django site can serve.
    #allowed_hosts: []

    # If True, the whitelist will not be used and all origins will be accepted.
    cors_origin_allow_all: False

    # A list of origins that are authorized to make cross-site HTTP requests.
    cors_origin_whitelist: ["{{ $.Values.kypoCrpUrl }}"]

    authentication:
        # Whether the REST API authentication is on.
        # If set to False, other authentication variables are not used.
        authenticated_rest_api: True

        # List of OIDC provider host/domain names that are allowed.
        allowed_oidc_providers:
    {{- range $.Values.kypoCrpOidcs }}
              - issuer: {{ trimSuffix "/" .url }}
                userinfo_endpoint:
    {{- end }}
        # User and Group roles registration endpoint URL.
        roles_registration_url: "http://{{ $.Values.userAndGroup.name }}:{{ $.Values.userAndGroup.port }}{{ $.Values.userAndGroup.contextPath }}microservices"

        # User and Group roles acquisition endpoint URL.
        roles_acquisition_url: "http://{{ $.Values.userAndGroup.name }}:{{ $.Values.userAndGroup.port }}{{ $.Values.userAndGroup.contextPath }}users/info"

    application_configuration:
        # The IP address of the KYPO head server.
        kypo_head_ip: {{ $.Values.kypoCrpHeadIp }}

        # The URL of OpenStack Identity service API.
        os_auth_url: {{ $.Values.kypoCrpOsAuthUrl }}

        # The ID of application credentials to authenticate at OpenStack cloud platform.
        os_application_credential_id: {{ $.Values.kypoCrpOsApplicationCredentialId }}

        # The secret string of APPLICATION_CREDENTIAL_ID.
        os_application_credential_secret: {{ $.Values.kypoCrpOsApplicationCredentialSecret }}

        # The OpenStack console type. One of: novnc, xvpvnc, spice-html5, rdp-html5, serial, webmks.
        os_console_type: {{ $.Values.kypoCrpOsConsoleType }}

        # The path to project log file.
        #log_file: kypo-sandbox-service.log

        # The level of log verbosity. One of: NOTSET, DEBUG, INFO, WARNING, ERROR, FATAL, CRITICAL.
        #log_level: INFO

        # The type of Git repositories. One of: INTERNAL, GITLAB.
        git_type: {{ $.Values.kypoCrpGit.type }}

        # Git server hostname or IP.
        git_server: {{ $.Values.kypoCrpGit.server }}

        # The address of Git REST server with protocol (optionally port)
        git_rest_server: {{ $.Values.kypoCrpGit.restServerUrl }}

        # The name of user used for communication with Git repository.
        git_user: {{ $.Values.kypoCrpGit.user }}

        # The SSH private key that kypo2-django-openstack uses to communicate with Git repository.
        git_private_key: /root/.ssh/git-ssh-key

        # The access token for Gitlab API
        git_access_token: {{ $.Values.kypoCrpGit.accessToken }}

        # The URL of Ansible networking Git repository.
        ansible_networking_url: {{ $.Values.kypoCrpGit.ansibleNetworkingUrl }}

        # The rev of Ansible networking Git repository.
        ansible_networking_rev: {{ $.Values.kypoCrpGit.ansibleNetworkingRev }}

        # The pattern to be replaced in image names of sandbox definitions.
        image_naming_strategy:
            pattern: ^munikypo/
            replace: ''

        #The mapping of flavor names to be replaced in sandbox definition.
        #flavor_mapping: {}

        # The object that represents SSH Host entry (see man page of ssh_config).
        proxy_jump_to_man:
            Host: {{ $.Values.kypoCrpProxyHost }}
            User: {{ $.Values.kypoCrpProxyUser }}
            IdentityFile: /root/.ssh/{{ $.Values.kypoCrpProxyKeyName }}

        # Timeout of sandbox (stack) creation in cloud in seconds.
        sandbox_build_timeout: {{ $.Values.kypoSandboxBuildTimeout }}

        # Timeout of sandbox (stack) deletion in cloud in seconds.
        sandbox_delete_timeout: {{ $.Values.kypoSandboxDeleteTimeout }}

        # Timeout for Ansible.
        sandbox_ansible_timeout: {{ $.Values.kypoSandboxAnsibleTimeout }}

        # The path to local temporary directory where KYPO will prepare Docker volumes.
        ansible_docker_volumes: /var/opt/kypo/kypo-ansible-runner-volumes

        # The name of the Docker image that is able to run Ansible playbook.
        ansible_docker_image: {{ $.Values.ansibleRunner.image.url }}:{{ $.Values.ansibleRunner.image.tag }}

        # Answers storage base URL.
        answers_storage_api: http://{{ $.Values.answersStorage.name }}:{{ $.Values.answersStorage.port }}{{ $.Values.answersStorage.contextPath }}

        # The name of the Docker network that the Runner will use.
        ansible_docker_network: kypo-platform-net

        # A path to directory of CA certificates or file of CA certificates, i.e. CA bundle.
        # Use in case of self-signed certificates in related services.
        ssl_ca_certificate_verify: /etc/ssl/certs/ca-certificates.crt

        sandbox_configuration:
            # The name or ID of network in OpenStack where all sandboxes will be deployed.
            base_network: kypo-base-net

            # The name of the image in OpenStack that will be used for MAN.
            man_image: "debian-9-x86_64"

            # The name of user in MAN.
            man_user: "debian"

            # The name of the flavor in OpenStack that will be used for MAN.
            man_flavor: "csirtmu.tiny1x2"

            # The cidr notation of network between MAN and every other node in sandbox.
            #sb_man_cidr: 192.168.128.0/17

            # The list of IP addresses to custom DNS servers.
            dns_name_servers: {{ $.Values.kypoCrpDns }}

  supervisord.conf: |
    [unix_http_server]
    file=/var/run/supervisor.sock   ; (the path to the socket file)
    chmod=0700                       ; sockef file mode (default 0700)

    [supervisord]
    logfile=/var/log/supervisor/supervisord.log ; (main log file;default $CWD/supervisord.log)
    pidfile=/var/run/supervisord.pid ; (supervisord pidfile;default supervisord.pid)
    childlogdir=/var/log/supervisor            ; ('AUTO' child log dir, default $TEMP)
    nodaemon = true

    ; the below section must remain in the config file for RPC
    ; (supervisorctl/web interface) to work, additional interfaces may be
    ; added by defining them in separate rpcinterface: sections
    [rpcinterface:supervisor]
    supervisor.rpcinterface_factory = supervisor.rpcinterface:make_main_rpcinterface

    [supervisorctl]
    serverurl=unix:///var/run/supervisor.sock ; use a unix:// URL  for a unix socket

    ; KYPO specific configuration

    [program:redis]
    command=redis-server /etc/redis/redis.conf --daemonize no
    priority=1
    stopsignal=TERM
    autostart=true
    autorestart=true

    [program:postgresql]
    command=postgres
    user=postgres
    priority=1
    stopsignal=TERM
    autostart=true
    autorestart=true

    [program:sandbox-service]
    command=bin/run-sandbox-service.sh
    environment=LC_ALL=C.UTF-8,LANG=C.UTF-8
    priority=2
    directory=/app
    stopsignal=TERM
    autostart=true
    autorestart=true

    [program:nginx]
    command=/usr/sbin/nginx -g "daemon off;"
    priority=3
    directory=/app
    stopsignal=TERM
    autostart=true
    autorestart=true

    [program:sandbox-service-rq-worker-openstack]
    command=pipenv run python3 manage.py rqworker openstack
    process_name=%(program_name)s-%(process_num)s
    environment=LC_ALL=C.UTF-8,LANG=C.UTF-8
    numprocs={{ $.Values.kypoCrpOpenstackWorkers }}
    directory=/app
    stopsignal=TERM
    autostart=true
    autorestart=true

    [program:sandbox-service-rq-worker-ansible]
    command=pipenv run python3 manage.py rqworker ansible
    process_name=%(program_name)s-%(process_num)s
    environment=LC_ALL=C.UTF-8,LANG=C.UTF-8
    numprocs={{ $.Values.kypoCrpAnsibleWorkers }}
    directory=/app
    stopsignal=TERM
    autostart=true
    autorestart=true

    [program:sandbox-service-rq-worker-default]
    command=pipenv run python3 manage.py rqworker default
    process_name=%(program_name)s-%(process_num)s
    environment=LC_ALL=C.UTF-8,LANG=C.UTF-8
    numprocs={{ $.Values.kypoCrpDefaultWorkers }}
    directory=/app
    stopsignal=TERM
    autostart=true
    autorestart=true

    [group:sandbox-service]
    programs=redis,postgresql,sandbox-service,sandbox-service-rq-worker-openstack,sandbox-service-rq-worker-ansible,sandbox-service-rq-worker-default

    # vim: set syn=dosini :
{{- end -}}
