syslogNg:
  name: kypo-syslog-ng
  replicasCount: 1
  image:
    url: balabit/syslog-ng
    tag: latest

  ports:
    - port: 514
      protocol: UDP
    - port: 515
      protocol: TCP
    - port: 601
      protocol: TCP
    - port: 6514
      protocol: TCP
      
  mounts:
    - name: syslog-events
      extension: .conf
      mountPath: /etc/syslog-ng/conf.d/
      isOneFile: true
      type: 
        configMap:
          name: kypo-syslog-ng-configmap
      
    - name: syslog-sandbox
      extension: .conf
      mountPath: /etc/syslog-ng/conf.d/
      isOneFile: true
      type: 
        configMap:
          name: kypo-syslog-ng-configmap

    - name: syslog-ng
      extension: .conf
      mountPath: /etc/syslog-ng/
      isOneFile: true
      type: 
        configMap:
          name: kypo-syslog-ng-configmap

    - name: ssl-certs
      extension:
      mountPath: /etc/ssl/certs/
      isOneFile: false
      type: 
        hostPath:
          path: /etc/ssl/certs/
          type: Directory

# Uncomment if syslog_ng_source_sandbox_protocol is "tls"
    # - name: syslog-tls-secret
    #   extension:
    #   mountPath: /etc/syslog-ng/cert.d/
      # isOneFile: false
      # type: 
      #   secret:
      #     secretName: syslog-tls-secret

# Service variable example
# ------------------------
# exampleService defines name of the service written in camelCase (do not use hyphens in this name)
exampleService:
# name, which will created pod contain, (recommended to split name by hyphens) 
  name: example-service
# replicasCount defines number of replicas created for this service
  replicasCount:
# image defines Docker image used for this service
  image:
#   url of Docker image
    url: busybox
#   tag of Docker image
    tag: latest
# list of ports of service, accessible only by other pods
  ports:
  - port: 8000
    protocol: TCP
# contextPath is path in url, which will point ingress to this service
  contextPath: /path/to/service
# list of mounts, which will be mounted into the created pod
  mounts:
#     name of mount, if the mount is file, it'll have the same name in pod
#     name of mount, if the mount is volume, it has just representative function
    - name: file
#     extension is used only if the mount is SINGLE file, it's the extension of mounted file, OPTIONAL
      extension: .yml
#     mountPath is path in the created pod, where the file/folder'll be mounted
      mountPath: /app/etc/
#     isOneFile is used to recognize, if the mount is the SINGLE file 
      isOneFile: true
#     type is unique variable, defining type of used mount. It must be one of these https://kubernetes.io/docs/concepts/storage/volumes/
#     and must have the exact structure of chosen volume
      type:
        configMap:
          name: postgres-configmap